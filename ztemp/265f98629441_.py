"""empty message

Revision ID: 265f98629441
Revises: 
Create Date: 2025-01-08 13:35:03.289043

"""
from alembic import op
import sqlalchemy as sa

import os
environment = os.getenv("FLASK_ENV")
SCHEMA = os.environ.get("SCHEMA")

# revision identifiers, used by Alembic.
revision = '265f98629441'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('mtm_children',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('mtm_child_col', sa.String(length=100), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    schema=SCHEMA
    )

    if environment == "production":
        op.execute(f"ALTER TABLE mtm_children SET SCHEMA {SCHEMA};")

    op.create_table('mtm_parents',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('mtm_parent_col', sa.String(length=100), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    schema=SCHEMA
    )

    if environment == "production":
        op.execute(f"ALTER TABLE mtm_children SET SCHEMA {SCHEMA};")

    op.create_table('parent_a',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('parent_a', sa.String(length=100), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    schema=SCHEMA
    )

    if environment == "production":
        op.execute(f"ALTER TABLE mtm_children SET SCHEMA {SCHEMA};")

    op.create_table('parent_b',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('parent_b', sa.String(length=100), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    schema=SCHEMA
    )

    if environment == "production":
        op.execute(f"ALTER TABLE mtm_children SET SCHEMA {SCHEMA};")

    op.create_table('users',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('username', sa.String(length=40), nullable=False),
    sa.Column('email', sa.String(length=255), nullable=False),
    sa.Column('hashed_password', sa.String(length=255), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email'),
    sa.UniqueConstraint('username'),
    schema=SCHEMA
    )

    if environment == "production":
        op.execute(f"ALTER TABLE mtm_children SET SCHEMA {SCHEMA};")

    op.create_table('child_a',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('child_a', sa.String(length=100), nullable=False),
    sa.Column('parent_a_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['parent_a_id'], ['parent_a.id'], ),
    sa.PrimaryKeyConstraint('id'),
    schema=SCHEMA
    )

    if environment == "production":
        op.execute(f"ALTER TABLE mtm_children SET SCHEMA {SCHEMA};")

    op.create_table('child_b',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('child_b', sa.String(length=100), nullable=False),
    sa.Column('parent_b_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['parent_b_id'], ['parent_b.id'], ),
    sa.PrimaryKeyConstraint('id'),
    schema=SCHEMA
    )

    if environment == "production":
        op.execute(f"ALTER TABLE mtm_children SET SCHEMA {SCHEMA};")

    op.create_table('mtm_parent_children',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('mtm_extra_data', sa.String(length=150), nullable=False),
    sa.Column('mtm_parent_join_id', sa.Integer(), nullable=True),
    sa.Column('mtm_child_join_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['mtm_child_join_id'], ['mtm_children.id'], ),
    sa.ForeignKeyConstraint(['mtm_parent_join_id'], ['mtm_parents.id'], ),
    sa.PrimaryKeyConstraint('id'),
    schema=SCHEMA
    )

    if environment == "production":
        op.execute(f"ALTER TABLE mtm_children SET SCHEMA {SCHEMA};")

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('mtm_parent_children')
    op.drop_table('child_b')
    op.drop_table('child_a')
    op.drop_table('users')
    op.drop_table('parent_b')
    op.drop_table('parent_a')
    op.drop_table('mtm_parents')
    op.drop_table('mtm_children')
    # ### end Alembic commands ###
